/* SPDX-License-Identifier: MIT */
pragma solidity ^0.8.6;

interface IVeridaDIDRegistry {
    /**
     * @notice Emitted when a user register endpoints
     * @param didAddress DID
     * @param endponits A list of registered endpoint
     */
    event Register(address didAddress, string[] endponits);

    /**
     * @notice Register a list of endpoints for a did
     * @dev Update the list if already registered
     * @param didAddress DID address, ex : 0xb794f5ea0ba39494ce839613fffba74279579268
     * @param endpoints List of endpoints
     * @param signature Signature is generated by : sign(${did}/${nonce}/${endpoints[0]}/${endpoints[1]}/...)
     */
    function register(address didAddress, string[] calldata endpoints, bytes calldata signature ) external;

    /**
     * @notice Lookup the endpoints for a given did
     * @param didAddress : DID address.
     * @return string[] Array of endpoints for a given did
     */
    function lookup(address didAddress) external view returns(string[] memory);

    /**
     * @notice Obtain the nonce for a did
     * @param didAddress DID address
     */
    function nonce(address didAddress) external view returns(uint);


}